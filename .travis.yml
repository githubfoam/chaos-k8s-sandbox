---
sudo: required
dist: bionic

notifications:
  slack:
    on_failure: always

matrix:
  fast_finish: true
  include:

    - name: "chaos mesh  snapped minikube kubectl helm Python 3.7 on bionic" #OK
      dist: bionic
      addons:
        snaps:
          - name: minikube
            confinement: classic
            channel: latest/stable
          - name: kubectl
            confinement: classic
            channel: latest/stable
          - name: helm
            confinement: classic
            channel: latest/stable
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - minikube version
        - helm version
        - kubectl version --client
        - sudo make deploy-chaosmesh-minikube
      after_success:
        - deactivate
                

    - name: "chaos mesh  w snapped microk8s Python 3.7 on bionic"
      dist: bionic
      addons:
        snaps:
          - name: microk8s
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-microk8s
        - sudo make deploy-chaosmesh-microk8s
      after_success:
        - deactivate

    - name: "chaos mesh k3d single master w snapped kubectl helm multipass Python 3.7 on bionic amd64"
      os: linux
      dist: bionic
      arch: amd64
      addons:
        snaps:
          - name: multipass
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
          - name: kubectl
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
          - name: helm
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - helm version
        - kubectl version --client        
        - sudo make deploy-k3d
        - sudo make deploy-chaosmesh
      after_success:
        - deactivate  

# ######################## TESTED OK STARTS #################################
    # - name: "chaos mesh kind w snapped kubectl helm Python 3.7 on bionic" #OK
    #   dist: bionic
    #   arch: amd64
    #   addons:
    #     snaps:
    #       - name: kubectl
    #         confinement: classic # or devmode
    #         channel: latest/stable # will be passed to --channel flag
    #       - name: helm
    #         confinement: classic # or devmode
    #         channel: latest/stable # will be passed to --channel flag
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #     - pip install -r requirements.txt
    #   script:
    #     - sudo make deploy-kind
    #     - sudo kind create cluster --name tutorial-cluster
    #     - sudo kubectl config use-context kind-tutorial-cluster
    #     - sudo make deploy-chaosmesh-kind
    #     - sudo kind delete cluster --name tutorial-cluster
    #   after_success:
    #     - deactivate

      